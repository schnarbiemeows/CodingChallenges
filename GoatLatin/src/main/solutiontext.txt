solution here is to split the string into a string array by space
the for each string
- convert to char[]
- make new char[] of length of original char[]+2+(i+1)
- case char[0] in ('a','e','i','o','u') --> new char[i] = char[i]+'ma'+(i+1)*'a'
- case char[] not in ('a','e','i','o','u')


	public String toGoatLatin(String S) {
       String[] words = S.split(" ");
       String newSentence = "";
       for(int i=0;i<words.length;i++) {
       		char[] word = words[i];
       		char[] newword = new char[word.length+3+i];
       		switch(word[0]) {
       			case('a'): vowel(word,newword);
       						break;
       			case('e'): vowel(word,newword);
       						break;
       			case('i'): vowel(word,newword);
       						break;
       			case('o'): vowel(word,newword);
       						break;
       			case('u'): vowel(word,newword);
       						break;
       			case('A'): vowel(word,newword);
       						break;
       			case('E'): vowel(word,newword);
       						break;
       			case('I'): vowel(word,newword);
       						break;
       			case('O'): vowel(word,newword);
       						break;
       			case('U'): vowel(word,newword);
       						break;
       			default: consonant(word,newword);
       						break;
       		}
       		newSentence+=newword.toString();
       } 
       return newSentence.substring(0,newSentence.length()-1);
 	}
       public void vowel(char[] word, char[] newword) {
       		for(int i=0;i<word.length;i++) {
       			newword[i]=word[i];
       		}
       		newword[word.length]='m';
       		newword[word.length+1]='a';
       		for(int j=word.length+2;j<newword.length;j++) {
       			newword[j]='a';
       		}
       }
       public void consonant(char[] word, char[] newword) {
       		for(int i=1;i<word.length;i++) {
       			newword[i-1]=word[i];
       		}
       		newword[word.length-1]=word[0];
       		newword[word.length]='m';
       		newword[word.length+1]='a';
       		for(int j=word.length+2;j<newword.length;j++) {
       			newword[j]='a';
       		}
       }