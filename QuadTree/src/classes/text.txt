public Node construct(int[][] grid) {

             if(grid.length==1) return new Node(true,true,null,null,null,null);

           int length = grid.length;

           int level = -1;

           while(length>0) {

              length/=2;

              level++;

           }

           Node root = createTree(grid, level, 0, grid.length,0,grid.length);

           return root;

    }

   

    public Node createTree(int[][] grid, int level, int startY, int endY, int startX, int endX) {

       if(level==0) {

             //System.out.println("LEAF level : startY="+startY+" endY="+endY+" startX="+startX+" endX="+endX);

             boolean val = false;

             if(grid[startY][startX]==1) val=true;

             Node thisNode = new Node(val,true,null,null,null,null);

             return thisNode;

      }

       else {

             int newEndX = (startX+endX)/2;

             int newEndY = (startY+endY)/2;

             //double random = Math.round(100*Math.random());

             //System.out.println("node-->"+random+" , level="+level+" , coordinates that came in were : "+startY+", "+endY+", "+startX+", "+endX);

             /*System.out.println("level="+level+" , 4 subgrids will be : ");

             System.out.println("y-start="+startY+" , y-end="+newEndY+" , x-start="+startX+" , x-end="+newEndX);

             System.out.println("y-start="+startY+" , y-end="+newEndY+" , x-start="+newEndX+" , x-end="+endX);

             System.out.println("y-start="+newEndY+" , y-end="+endY+" , x-start="+startX+" , x-end="+newEndX);

             System.out.println("y-start="+newEndY+" , y-end="+endY+" , x-start="+newEndX+" , x-end="+endX);*/

             Node thisNode = new Node(false,false,createTree(grid,level-1,startY,newEndY,startX,newEndX),

                                                            createTree(grid,level-1,startY,newEndY,newEndX,endX),

                                                            createTree(grid,level-1,newEndY,endY,startX,newEndX),

                                                            createTree(grid,level-1,newEndY,endY,newEndX,endX));

             /*System.out.println("for node -->"+random+" results are :"+thisNode.topLeft.val+

                           " "+thisNode.topRight.val+" "+thisNode.bottomLeft.val+" "+thisNode.bottomRight.val);*/

              

                    //System.out.println("for node -->"+random+" level : " + level + " it's a leaf!");

                    thisNode.val = thisNode.topLeft.val;

                    thisNode.isLeaf=true;

                    thisNode.topLeft=null;

                    thisNode.topRight=null;

                    thisNode.bottomLeft=null;

                    thisNode.bottomRight=null;

             } /*else {

                    System.out.println("for node -->"+random+" is not a leaf");

             }*/

             return thisNode;

       }

    }